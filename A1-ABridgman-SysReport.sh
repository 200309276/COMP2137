#!/bin/bash

# ========Sudo check - if not run with sudo, exit========
if [ "$EUID" -ne 0 ]; then
  echo "Please run this script with sudo."
  exit 1
fi

# ========Check for prerequisite applications========
command -v lshw >/dev/null 2>&1 || LSHW_MISSING=1
command -v ufw  >/dev/null 2>&1 || UFW_MISSING=1
command -v ss   >/dev/null 2>&1 || SS_MISSING=1

# 1. GATHER DATA
# =================================================================

# ========Header Data========
REPORT_HOSTNAME=$(hostname)
REPORT_USERNAME=$(whoami)
REPORT_DATETIME=$(date +"%Y-%m-%d %H:%M:%S")

# ========System Information========
source /etc/os-release
REPORT_OS="$NAME $VERSION_ID"
REPORT_UPTIME=$(uptime -p | sed 's/up //')
if [ -z "$LSHW_MISSING" ]; then
  REPORT_CPU=$(lshw -C cpu 2>/dev/null | grep 'product' | head -n 1 | sed 's/.*: //')
else
  REPORT_CPU="N/A"
fi
REPORT_RAM=$(free -h | awk '/^Mem:/ {print $2}')

# ========Network Information========
REPORT_GATEWAY_IP=$(ip r | awk '/^default/ {print $3; exit}')
DEFAULT_INTERFACE=$(ip r | awk '/^default/ {print $5; exit}')
REPORT_HOST_ADDRESS=$(ip a s "$DEFAULT_INTERFACE" | awk '/inet /{print $2}' | cut -d/ -f1)
REPORT_DNS_SERVER=$(grep '^nameserver' /etc/resolv.conf | awk '{print $2}' | head -n 1)

# ========Storage and Video========
if [ -z "$LSHW_MISSING" ]; then
  REPORT_DISKS=$(lshw -class disk 2>/dev/null | awk '/product:|vendor:|size:/ {
      if ($1 == "product:") { prod=$2 }
      if ($1 == "vendor:") { vend=$2 }
      if ($1 == "size:") { size=$2 }
      if (prod && size) { print vend " " prod " (" size ")" ; prod=""; vend=""; size="" }
  } END { printf "" }' | tr '\n' ',' | sed 's/, $//; s/,$//')
  REPORT_VIDEO=$(lshw -C display 2>/dev/null | grep 'product' | head -n 1 | sed 's/.*: //')
else
  REPORT_DISKS="N/A"
  REPORT_VIDEO="N/A"
fi

# ========System Status========
REPORT_USERS_LOGGED_IN=$(who | awk '{print $1}' | sort -u | tr '\n' ',' | sed 's/, $//; s/,$//')
REPORT_DISK_SPACE=$(df -h --local | awk '{if (NR>1) print $6 " " $4}' | tr '\n' ' ' | sed 's/ $//')
REPORT_PROCESS_COUNT=$(ps -e | wc -l)
REPORT_LOAD_AVERAGES=$(uptime | awk -F'load average:' '{print $2}' | sed 's/^ //')
if [ -z "$SS_MISSING" ]; then
  REPORT_LISTENING_PORTS=$(ss -tuln | grep -E 'LISTEN|UNCONN' | awk -F: '{print $NF}' | cut -d ' ' -f 1 | sort -nu | tr '\n' ',' | sed 's/, $//; s/,$//')
else
  REPORT_LISTENING_PORTS="N/A"
fi
if [ -z "$UFW_MISSING" ]; then
  REPORT_UFW_STATUS=$(ufw status | head -n 1 | sed 's/Status: //')
else
  REPORT_UFW_STATUS="N/A"
fi

# 2. OUTPUT TEMPLATE
# =================================================================

cat << EOT

System Report for $REPORT_HOSTNAME generated by $REPORT_USERNAME, on $REPORT_DATETIME

------------------
System Information
------------------
Operating System and Version: $REPORT_OS
Current System Uptime: $REPORT_UPTIME
CPU: $REPORT_CPU
Total RAM: $REPORT_RAM
Disk(s): $REPORT_DISKS
Video: $REPORT_VIDEO
YOUR IP: $REPORT_HOST_ADDRESS
Gateway IP: $REPORT_GATEWAY_IP
DNS Server: $REPORT_DNS_SERVER

-------------
System Status
-------------
Users Logged In: $REPORT_USERS_LOGGED_IN
Disk Space: $REPORT_DISK_SPACE
Process Count: $REPORT_PROCESS_COUNT
Load Averages: $REPORT_LOAD_AVERAGES
Listening Network Ports: $REPORT_LISTENING_PORTS
UFW Status: $REPORT_UFW_STATUS

EOT
